name: Release

on:
    push:
        tags:
            - "v*.*.*" # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
    contents: write

jobs:
    release:
        name: Create Release
        runs-on: ubuntu-latest
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            version: ${{ steps.get_version.outputs.version }}
        steps:
            - name: Get version from tag
              id: get_version
              run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ steps.get_version.outputs.version }}
                  draft: false
                  prerelease: false

    build:
        name: Build Binaries
        needs: release
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - goos: linux
                      goarch: amd64
                      output: portforward-linux-amd64
                    - goos: linux
                      goarch: arm64
                      output: portforward-linux-arm64
                    - goos: windows
                      goarch: amd64
                      output: portforward-windows-amd64.exe
                    - goos: darwin
                      goarch: amd64
                      output: portforward-darwin-amd64
                    - goos: darwin
                      goarch: arm64
                      output: portforward-darwin-arm64
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.21"

            - name: Build binary
              env:
                  GOOS: ${{ matrix.goos }}
                  GOARCH: ${{ matrix.goarch }}
              run: |
                  go build -ldflags="-s -w" -o ${{ matrix.output }} main.go

            - name: Upload Release Asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.release.outputs.upload_url }}
                  asset_path: ./${{ matrix.output }}
                  asset_name: ${{ matrix.output }}
                  asset_content_type: application/octet-stream
